#+LANGUAGE: de
#+OPTIONS: html5-fancy:t
#+OPTIONS: toc:nil
#+OPTIONS: tex:t
#+HTML_DOCTYPE: xhtml5
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="/home/orm/.config/emacs/org-mode/ox-custom/css/org-manual-style.css" />
#+INFOJS_OPT: path:scripts/org-info-de.js
#+LATEX_CLASS_OPTIONS: [a4paper]
#+LATEX: \setlength\parindent{0pt}
#+LATEX_HEADER: \usepackage[top=0.5cm, left=2cm, bottom=0.5cm, right=2cm]{geometry}
#+LATEX_HEADER: \usepackage{fontspec} % For loading fonts
#+LATEX_HEADER: \defaultfontfeatures{Mapping=tex-text}
#+LATEX_HEADER: \setmainfont[Scale=0.9]{Calibri}
#+LATEX_HEADER: \setsansfont[Scale=0.9]{Calibri}[Scale=MatchLowercase]
#+LATEX_HEADER: \setmonofont[Scale=0.7]{DejaVu Sans Mono}[Scale=MatchLowercase]

* clamps-install

  Scripts for the installation of [[https://github.com/ormf/clamps][clamps]] on Linux or OSX.

** Linux Installation
*** Dependencies
    Please download the following programs using the package manager
    of your Linux Distribution.

    - Gnu Emacs

    - Jack

    - SBCL

    - git

    - LilyPond (optional)

    - Inkscape (optional)     
*** Fresh install

    This installation method installs everything necessary to run
    clamps in Emacs. For an installation into a system already running
    Emacs/sbcl/quicklisp, see "Installation into a working Lisp setup"
    below.

    Using the command for a fresh install automates the following
    steps:

    - Emacs Configuration

      Install the contents of =emacs.d= of the repository into
      =$HOME/.emacs.d=

    - Miscellaneous config files

      Copy the following files from the repo into the user's =$HOME=
      folder:

      =incudinerc= to =$HOME/.incudinerc=

      =cminit.lisp= to =$HOME/.cminit.lisp=

    - Quicklisp

      Quicklisp will be installed into its default location
      =$HOME/quicklisp= and the file =$HOME/.sbclrc= updated to always
      load quicklisp on sbcl startup.
   
    - Local Quicklisp Packages

      The following local Quicklisp Packages will be downloaded and
      installed:

      =$HOME/quicklisp/local-projects/incudine=
   
      =$HOME/quicklisp/local-projects/cm=

      =$HOME/quicklisp/local-projects/fomus=
   
      =$HOME/quicklisp/local-projects/ats-cuda=

      =$HOME/quicklisp/local-projects/clamps=

**** Preparation

     - Open a terminal and issue
       #+BEGIN_SRC sh
         cd /tmp
         git clone https://github.com/ormf/clamps-install.git
         cd clamps-install
       #+END_SRC

**** Installation commands

     IMPORTANT NOTE: Before calling the installation command, make
     sure, the files and folders affected by the installation mentioned
     above are backed up and moved out of the way as the installation
     will abort in case any of the files/folders exist.

     If you are sure, the files and folders can be removed safely, you
     can explicitely remove them with the command

     #+BEGIN_SRC sh
       sh clean.sh
     #+END_SRC

     Be aware that this command silently and irrevocably removes all
     files and folders without warning!

     - The fresh installation is done with the command

       #+BEGIN_SRC sh
         sh clamps-install.sh
       #+END_SRC

       This will take a couple of minutes.

       If everything worked without errors, Emacs should be started at
       the end of the process and should show a window split in half
       with a Common Lisp REPL in the lower half.
**** Inkscape customization

     To install the Inkscape extension for integration with clamps,
     issue the following additional commands in a terminal:
    
     #+BEGIN_SRC sh
       cd /tmp/clamps-install
       cp inkscape-plugin/* $HOME/.config/inkscape/extensions
     #+END_SRC

     After a restart of Inkscape, there should be an entry called "Play
     Selection" in the "Extensions" Menu of Inkscape.

**** Testing the Installation

     - Start jackd (e.g. using qjackctl) until it is showing "active"
       or "running".

     - Start Emacs and input the following in the REPL:

     #+BEGIN_SRC lisp
       cl-user> (ql:quickload :clamps)
     #+END_SRC

     This command will take a couple of minutes at the first time as
     all required packages have to get downloaded and compiled.

     If everything worked without errors, issuing the following
     command should initialize the midi ports, start dsp processing
     and the GUI server.

     #+BEGIN_SRC lisp
       cl-user> (clamps)
     #+END_SRC

     If that worked as well, use the following command to play a Flute
     Middle C for 1 second using the outputs of Jack.

     #+BEGIN_SRC lisp
       clamps> (output (new sfz))
     #+END_SRC

** Apple OSX Installation
