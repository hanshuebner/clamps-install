#+LANGUAGE: de
#+OPTIONS: html5-fancy:t
#+OPTIONS: toc:nil
#+OPTIONS: tex:t
#+HTML_DOCTYPE: xhtml5
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="/home/orm/.config/emacs/org-mode/ox-custom/css/org-manual-style.css" />
#+INFOJS_OPT: path:scripts/org-info-de.js
#+LATEX_CLASS_OPTIONS: [a4paper]
#+LATEX: \setlength\parindent{0pt}
#+LATEX_HEADER: \usepackage[top=0.5cm, left=2cm, bottom=0.5cm, right=2cm]{geometry}
#+LATEX_HEADER: \usepackage{fontspec} % For loading fonts
#+LATEX_HEADER: \defaultfontfeatures{Mapping=tex-text}
#+LATEX_HEADER: \setmainfont[Scale=0.9]{Calibri}
#+LATEX_HEADER: \setsansfont[Scale=0.9]{Calibri}[Scale=MatchLowercase]
#+LATEX_HEADER: \setmonofont[Scale=0.7]{DejaVu Sans Mono}[Scale=MatchLowercase]

* clamps-install

  Scripts for the installation of [[https://github.com/ormf/clamps][clamps]].

* Linux Installation
** Dependencies
   Please download the following programs using the package manager
   of your Linux Distribution.

   - Gnu Emacs

   - Jack

   - SBCL

   - LilyPond (optional)

   - Inkscape (optional)
     
** Fresh install

   This installation method installs everything necessary to run
   clamps in Emacs.

   The automated process explained in [[Preparation]] will install the
   following:

   - Emacs Configuration

     Installs the contents of =emacs.d= of the repository into
     =$HOME/.emacs.d=

   - Miscellaneous config files

     Copies the following files from the repo into the user's =$HOME=
     folder:

     =incudinerc= to =$HOME/.incudinerc=

     =cminit.lisp= to =$HOME/.cminit.lisp=

   - Quicklisp

     Quicklisp will be installed into its default location
     =$HOME/quicklisp=
   
   - Local Quicklisp Packages

     The following local Quicklisp Packages will be downloaded and
     installed:

     =$HOME/quicklisp/local-projects/incudine=
   
     =$HOME/quicklisp/local-projects/cm=

     =$HOME/quicklisp/local-projects/fomus=
   
     =$HOME/quicklisp/local-projects/ats-cuda=

     =$HOME/quicklisp/local-projects/clamps=

*** Preparation

    IMPORTANT NOTE: Before calling the installation command, make
    sure, the files and folders affected by the installation,
    mentioned above are backed up and the original files are removed
    as they will be overwritten without warning!
    
    - Open a terminal and issue
      #+BEGIN_SRC sh
        cd /tmp
        git clone https://github.com/ormf/clamps-install.git
        cd clamps-install
      #+END_SRC

*** Installation commands

    - To make sure the files don't exist in their default location,
      you can explicitely remove all files and folders (re)created by
      the installation with the command

      =sh clean.sh=

      Make sure to do a backup of any of the files and folders
      affected by the installation if you made any changes or have
      custom configuration files and folders, especially concerning
      =$HOME/quicklisp= and =$HOME/.emacs.d=.

    - The fresh installation is done with the command

      =sh clamps-install.sh=

      This will take a couple of minutes.

      If everything worked without errors, Emacs should be started at
      the end of the process and should show a window split in half
      with a Common Lisp REPL in the lower half.

*** Inkscape customization

    To install the Inkscape extension for integration with clamps,
    issue the following additional commands in a terminal:
    
    - Open a terminal and issue
      #+BEGIN_SRC sh
        cd /tmp/clamps-install
        cp inkscape-plugin/* $HOME/.config/inkscape/extensions
      #+END_SRC

      After a restart of Inkscape, there should be an entry called
      "Play Selection" in the "Extensions" Menu of Inkscape.

*** Testing the Installation

    - Start jackd (e.g. using qjackctl) until it is showing "active"
      or "running".

    - Start Emacs and input the following in the REPL:

    #+BEGIN_SRC lisp
      cl-user> (ql:quickload :clamps)
    #+END_SRC

    This command will take a couple of minutes at the first time as
    all required packages have to get downloaded and compiled.

    If everything worked without errors, issuing the following
    command should first initialize the midi ports, start dsp
    processing and the GUI server.

    #+BEGIN_SRC lisp
      cl-user> (clamps)
    #+END_SRC

    If that worked as well, use the following command to play a Flute
    Middle C using the outputs of Jack.

    #+BEGIN_SRC lisp
      cl-user> (output (new sfz))
    #+END_SRC
